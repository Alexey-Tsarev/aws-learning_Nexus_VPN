{
  "AWSTemplateFormatVersion": "2010-09-09",


  "Parameters": {
    "KeyName": {
      "Default": "atsarev-gridu-devops-ireland",
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },
    "Repo": {
      "Default": "https://github.com/AlexeySofree/aws-learning_Nexus_VPN/archive/master.zip",
      "Description": "Repository URL",
      "Type": "String"
    },
    "InstanceTypeNexus": {
      "Description": "EC2 instance type for Nexus",
      "Type": "String",
      "Default": "t2.micro",
      "AllowedValues": [ "t1.micro", "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "g2.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },
    "ImageIdNexus": {
      "Default": "ami-7d50491b",
      "Description": "ImageId for Nexus",
      "Type": "String"
    },
    "InstanceTypeVPN": {
      "Description": "EC2 instance type for VPN",
      "Type": "String",
      "Default": "t2.micro",
      "AllowedValues": [ "t1.micro", "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "g2.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },
    "ImageIdVPN": {
      "Default": "ami-7d50491b",
      "Description": "ImageId for VPN",
      "Type": "String"
    },
  },

  "Resources": {
    "ZoneNexusLocal": {
      "Type": "AWS::Route53::HostedZone",
      "Properties": {
        "Name": "nexus.internal.",
        "VPCs":[
           {
              "VPCId": {
                 "Ref": "vpcd407a0b3"
              },
              "VPCRegion": "eu-west-1"
           }
        ],
      }
    },
    "DNSNexusLocal": {
      "Type": "AWS::Route53::RecordSetGroup",
      "Properties": {
        "HostedZoneId": {
          "Ref": "ZoneNexusLocal"
        },
        "RecordSets": [
          {
            "Name": "nexus.internal.",
            "Type": "A",
            "TTL": "60",
            "ResourceRecords": [
              "8.8.8.8"
            ]
          }
        ]
      }
    },
    "vpcd407a0b3": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "172.17.0.0/16",
        "InstanceTenancy": "default",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "Tags": [
          {
            "Key": "Name",
            "Value": "vpc_nexus"
          }
        ]
      }
    },
    "subnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.17.1.0/24",
        "AvailabilityZone": "eu-west-1a",
        "VpcId": {
          "Ref": "vpcd407a0b3"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "subnet_nexus_1"
          }
        ]
      }
    },
    "subnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.17.2.0/24",
        "AvailabilityZone": "eu-west-1b",
        "VpcId": {
          "Ref": "vpcd407a0b3"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "subnet_nexus_2"
          }
        ]
      }
    },
    "subnet3": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "172.17.3.0/24",
        "AvailabilityZone": "eu-west-1c",
        "VpcId": {
          "Ref": "vpcd407a0b3"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "subnet_nexus_3"
          }
        ]
      }
    },
    "igw503a7934": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "igw"
          }
        ]
      }
    },
    "dopt7f8ea21b": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainName": "eu-west-1.compute.internal",
        "DomainNameServers": [
          "AmazonProvidedDNS"
        ]
      }
    },
    "acl79394d1e": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "vpcd407a0b3"
        }
      }
    },
    "rtb36af9151": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpcd407a0b3"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "rt_via_vpn"
          }
        ]
      }
    },
    "rtbc6cef2a1": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpcd407a0b3"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "rt_default"
          }
        ]
      }
    },
    "rtb1489b773": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "vpcd407a0b3"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "rt_igw"
          }
        ]
      }
    },
    "eip522129896": {
      "Type": "AWS::EC2::EIP",
      "DependsOn": [
        "gw2"
      ],
      "Properties": {
        "Domain": "vpc"
      }
    },
    "ASGNexus": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AvailabilityZones": [
          "eu-west-1b",
          "eu-west-1c"
        ],
        "Cooldown": "300",
        "DesiredCapacity": "1",
        "HealthCheckGracePeriod": "300",
        "HealthCheckType": "EC2",
        "MaxSize": "1",
        "MinSize": "1",
        "VPCZoneIdentifier": [
          {
            "Ref": "subnet3"
          },
          {
            "Ref": "subnet2"
          }
        ],
        "LaunchConfigurationName": {
          "Ref": "LCNexus"
        },
        "Tags": [
          {
            "Key": "role",
            "Value": "asg_nexus",
            "PropagateAtLaunch": true
          }
        ],
        "TerminationPolicies": [
          "Default"
        ]
      }
    },
    "ASGVPN": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AvailabilityZones": [
          "eu-west-1a"
        ],
        "Cooldown": "300",
        "DesiredCapacity": "1",
        "HealthCheckGracePeriod": "300",
        "HealthCheckType": "EC2",
        "MaxSize": "1",
        "MinSize": "1",
        "VPCZoneIdentifier": [
          {
            "Ref": "subnet1"
          }
        ],
        "LaunchConfigurationName": {
          "Ref": "LCVPN"
        },
        "Tags": [
          {
            "Key": "role",
            "Value": "asg_vpn",
            "PropagateAtLaunch": true
          }
        ],
        "TerminationPolicies": [
          "Default"
        ]
      }
    },
    "LCVPN": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": { "Ref" : "ImageIdVPN" },
        "InstanceType": { "Ref" : "InstanceTypeVPN" },
        "KeyName": { "Ref" : "KeyName" },
        "SecurityGroups": [
          {
            "Ref": "SGVPN"
          }
        ],
        "AssociatePublicIpAddress": true,
        "UserData": { "Fn::Base64": { "Fn::Join": ["", [
             "#!/usr/bin/env sh\n",
             "\n",
             "echo 'vpn' > /role.txt\n",
             "\n",
             "REPO=", { "Ref" : "Repo" },
             "\n",
             "mkdir ~/temp\n",
             "cd    ~/temp\n",
             "wget -c $REPO\n",
             "unzip -o *.zip\n",
             "rm -f *.zip\n",
             "\n",
             "~/temp/aws-learning_Nexus_VPN-master/instance/startup.sh\n"
        ]]}},
        "IamInstanceProfile": "arn:aws:iam::849810908946:instance-profile/vpn",
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "SnapshotId": "snap-075d9de1b8299f8bc",
              "VolumeSize": 8
            }
          }
        ]
      }
    },
    "LCNexus": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": { "Ref" : "ImageIdNexus" },
        "InstanceType": { "Ref" : "InstanceTypeNexus" },
        "KeyName": { "Ref" : "KeyName" },
        "SecurityGroups": [
          {
            "Ref": "SGNexus"
          }
        ],
        "UserData": { "Fn::Base64": { "Fn::Join": ["", [
             "#!/usr/bin/env sh\n",
             "\n",
             "echo 'nexus' > /role.txt\n",
             "\n",
             "REPO=", { "Ref" : "Repo" },
             "\n",
             "mkdir ~/temp\n",
             "cd    ~/temp\n",
             "wget -c $REPO\n",
             "unzip -o *.zip\n",
             "rm -f *.zip\n",
             "\n",
             "~/temp/aws-learning_Nexus_VPN-master/instance/startup.sh\n"
        ]]}},
        "IamInstanceProfile": "arn:aws:iam::849810908946:instance-profile/nexus",
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "SnapshotId": "snap-075d9de1b8299f8bc",
              "VolumeSize": 8
            }
          }
        ]
      }
    },
    "SGEFS": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "sg_efs",
        "VpcId": {
          "Ref": "vpcd407a0b3"
        }
      }
    },
    "SGNexus": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "sg_nexus",
        "VpcId": {
          "Ref": "vpcd407a0b3"
        }
      }
    },
    "SGVPN": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "sg_vpn",
        "VpcId": {
          "Ref": "vpcd407a0b3"
        }
      }
    },
    "acl3": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "true",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "acl79394d1e"
        }
      }
    },
    "acl4": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "acl79394d1e"
        }
      }
    },
    "subnetacl4": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "acl79394d1e"
        },
        "SubnetId": {
          "Ref": "subnet2"
        }
      }
    },
    "subnetacl5": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "acl79394d1e"
        },
        "SubnetId": {
          "Ref": "subnet3"
        }
      }
    },
    "subnetacl6": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "acl79394d1e"
        },
        "SubnetId": {
          "Ref": "subnet1"
        }
      }
    },
    "gw2": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "vpcd407a0b3"
        },
        "InternetGatewayId": {
          "Ref": "igw503a7934"
        }
      }
    },
    "subnetroute5": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtb36af9151"
        },
        "SubnetId": {
          "Ref": "subnet2"
        }
      }
    },
    "subnetroute6": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtb36af9151"
        },
        "SubnetId": {
          "Ref": "subnet3"
        }
      }
    },
    "subnetroute8": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "rtb1489b773"
        },
        "SubnetId": {
          "Ref": "subnet1"
        }
      }
    },
    "route3": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "rtb36af9151"
        },
        "GatewayId": {
          "Ref": "igw503a7934"
        }
      }
    },
    "route4": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "rtb1489b773"
        },
        "GatewayId": {
          "Ref": "igw503a7934"
        }
      },
      "DependsOn": "gw2"
    },
    "dchpassoc2": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": {
          "Ref": "vpcd407a0b3"
        },
        "DhcpOptionsId": {
          "Ref": "dopt7f8ea21b"
        }
      }
    },
    "ingress10": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "SGEFS"
        },
        "IpProtocol": "tcp",
        "FromPort": "2049",
        "ToPort": "2049",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress11": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "SGNexus"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress12": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "SGNexus"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress13": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "SGNexus"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress14": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "SGVPN"
        },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress15": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "SGVPN"
        },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress16": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "SGVPN"
        },
        "IpProtocol": "tcp",
        "FromPort": "1194",
        "ToPort": "1194",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress17": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "SGVPN"
        },
        "IpProtocol": "tcp",
        "FromPort": "443",
        "ToPort": "443",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "ingress18": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "SGVPN"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress4": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "SGEFS"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress5": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "SGNexus"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "egress6": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Ref": "SGVPN"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "EFS": {
      "Type": "AWS::EFS::FileSystem",
      "Properties": {
        "FileSystemTags": [
          {
            "Key": "Name",
            "Value": "efs"
          }
        ]
      }
    },
    "MountTarget1": {
      "Type": "AWS::EFS::MountTarget",
      "Properties": {
        "FileSystemId": { "Ref": "EFS" },
        "SubnetId": { "Ref": "subnet1" },
        "SecurityGroups": [ { "Ref": "SGEFS" } ]
      }
    },
    "MountTarget2": {
      "Type": "AWS::EFS::MountTarget",
      "Properties": {
        "FileSystemId": { "Ref": "EFS" },
        "SubnetId": { "Ref": "subnet2" },
        "SecurityGroups": [ { "Ref": "SGEFS" } ]
      }
    },
    "MountTarget3": {
      "Type": "AWS::EFS::MountTarget",
      "Properties": {
        "FileSystemId": { "Ref": "EFS" },
        "SubnetId": { "Ref": "subnet3" },
        "SecurityGroups": [ { "Ref": "SGEFS" } ]
      }
    }
  },
  "Description": "CloudFormation"
}
